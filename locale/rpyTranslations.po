# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
# Note: Where the 'wide' comment is put, it indicates the length of line to keep in the translation, so if
# a line length reach the wide indicated, it should be split with "\n" generaly followed by an indentation.
#
msgid ""
msgstr ""
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Project-Id-Version: 1.0\n"
"POT-Creation-Date: 2022-06-27 21:22+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: \n"
"Plural-Forms: nplurals=2; plural=n == 1 ? 0 : 1;\n"

#: rpyTranslations.py:110
msgid ""
"This function try to estimate the proxymity between two strings.\n"
"Please note that this can hardly be precise and error-free.\n"
msgstr ""

#: rpyTranslations.py:119 rpyTranslations.py:121 rpyTranslations.py:123
#: rpyTranslations.py:125 rpyTranslations.py:548 rpyTranslations.py:550
#: rpyTranslations.py:552 rpyTranslations.py:762 rpyTranslations.py:867
#: rpyTranslations.py:869 rpyTranslations.py:966 rpyTranslations.py:968
#: rpyTranslations.py:970 rpyTranslations.py:972 rpyTranslations.py:974
#: rpyTranslations.py:976 rpyTranslations.py:1302 rpyTranslations.py:1348
#: rpyTranslations.py:1442 rpyTranslations.py:1472 rpyTranslations.py:1506
#: rpyTranslations.py:1541 rpyTranslations.py:1578 rpyTranslations.py:1602
#: rpyTranslations.py:1635
msgid "Invalide argument:"
msgstr ""

#: rpyTranslations.py:119 rpyTranslations.py:121 rpyTranslations.py:123
#: rpyTranslations.py:125 rpyTranslations.py:550 rpyTranslations.py:552
#: rpyTranslations.py:867 rpyTranslations.py:869 rpyTranslations.py:966
#: rpyTranslations.py:968 rpyTranslations.py:972 rpyTranslations.py:974
msgid "{} parameter should be of booleen type"
msgstr ""

#: rpyTranslations.py:128 rpyTranslations.py:1002
msgid "The length of both list of files need to be equal"
msgstr ""

#: rpyTranslations.py:131 rpyTranslations.py:133 rpyTranslations.py:555
#: rpyTranslations.py:766 rpyTranslations.py:873 rpyTranslations.py:983
#: rpyTranslations.py:995 rpyTranslations.py:1005 rpyTranslations.py:1007
msgid "doen’t exist or is not a file"
msgstr ""

#: rpyTranslations.py:135 rpyTranslations.py:997 rpyTranslations.py:1009
msgid "Both list of files need to have their files different"
msgstr ""

#: rpyTranslations.py:532
# wide 110
msgid ""
"forFiles: List - The list of files where differences of translation need to be compared.\n"
"FromFiles: List,... - Successions of list of files from where to get other translations.\n"
"newpart: Booleen - Output or not comparisons of new-part of translations.\n"
"what: Booleen - Output or not of what is add or is no longer present in the translation files.\n"
"reflines: Booleen - Output or not comparisons of reference-lines.\n"
"trID: Booleen - Output or not comparisons of translation-identifiers.\n"
"verbose: Integer - Indicates the level of verbosity, 0 to deactivate.\n"
"debug: Booleen - Active or not the debuging. The amount in this function can be huge.\n"
msgstr ""

#: rpyTranslations.py:548
msgid "{} parameter should be 1 for empty, 2 for pass, or 0 to deactivate"
msgstr ""

#: rpyTranslations.py:556 rpyTranslations.py:772 rpyTranslations.py:775
#: rpyTranslations.py:879 rpyTranslations.py:882
msgid "All files need to be different"
msgstr ""

#: rpyTranslations.py:747
# wide 110
msgid ""
"forFiles: List - The list of files where translations need to be checked.\n"
"untranslated: Integer - Should be: 1 to check empty, 2 to also check passed, or 0 to deactivate.\n"
"where: Booleen - Output or not of where the empty translations are.\n"
"formats: Booleen - Check or not translations formatting.\n"
"         Like leading white-spaces, brackets ([]) and braces ({}).\n"
"verbose: Integer - Indicates the level of verbosity, 0 to deactivate.\n"
"debug: Booleen - Active or not the debuging. The amount in this function can be huge.\n"
msgstr ""

#: rpyTranslations.py:762
msgid "{} parameter should be "
msgstr ""

#: rpyTranslations.py:852
# wide 110
msgid ""
"forFiles: List - The list of files where empty translations need to be fixed.\n"
"action: Char - Should be: 'P' to change empty translation to the 'pass' keyword, 'C' to also comment\n"
"        'strings' translations instead of deleting them, or 'R' to remove all empty or passed translation.\n"
"outdir: String - A path relative from the 'forFiles' paths to indicate where to save the result or None\n"
"        to save inplace.\n"
"verbose: Integer - Indicates the level of verbosity, 0 to deactivate.\n"
"debug: Booleen - Active or not the debuging. The amount in this function can be huge.\n"
msgstr ""

#: rpyTranslations.py:950
# wide 110
msgid ""
"forFiles: List - The list of files where translations need to be reordered.\n"
"reverse: Booleen - Reordering as it was originaly (as extracted by Ren'Py) or process normaly.\n"
"proxy: Booleen - Active or not the regroupement in function of their normalized alpha-numeric\n"
"       representation.\n"
"outdir: String - A path relative from the 'forFiles' paths to indicate where to save the result or None\n"
"        to save inplace.\n"
"verbose: Integer - Indicates the level of verbosity, 0 to deactivate.\n"
"debug: Booleen - Active or not the debuging.\n"
msgstr ""

#: rpyTranslations.py:970
msgid "{} parameter should be an integer between 0 and 4 (includes)"
msgstr ""

#: rpyTranslations.py:976
msgid "{} parameter should be N for no, A for ask, or F for force"
msgstr ""

#: rpyTranslations.py:992
msgid "The length of each list of files need to be equal"
msgstr ""

#: rpyTranslations.py:1199
#, python-brace-format
msgid ""
"For: {N_old}\n"
"\t{old}\n"
"Attempt to replace: {N_new}\n"
"\t{new}\n"
"With: {N_From}\n"
"\t{From}"
msgstr ""

#: rpyTranslations.py:1201
#, python-brace-format
msgid ""
"For: {N_old}\n"
"\t{old}\n"
"Attempt to replace: {N_new}\n"
"\t{new}\n"
"With:\n"
"\t{From}"
msgstr ""

#: rpyTranslations.py:1204
#, python-brace-format
msgid ""
"For:\n"
"\t{old}\n"
"Attempt to replace:\n"
"\t{new}\n"
"With: {N_From}\n"
"\t{From}"
msgstr ""

#: rpyTranslations.py:1206
#, python-brace-format
msgid ""
"For:\n"
"\t{old}\n"
"Attempt to replace:\n"
"\t{new}\n"
"With:\n"
"\t{From}"
msgstr ""

#: rpyTranslations.py:1207
msgid "Warning:"
msgstr ""

#: rpyTranslations.py:1207
msgid "Please note that the 'With' was found by proxy."
msgstr ""

#: rpyTranslations.py:1209
msgid "Proceed?"
msgstr ""

#: rpyTranslations.py:1279
# wide 110
msgid ""
"forFiles: List - The list of files that need to be populated.\n"
"FromFiles: List,... - Successions of list of files from where to get the translations.\n"
"bunch: Booleen - Indicates if, when a translation is not found, it should be searched for in other files\n"
"       in the current fromFiles group.\n"
"bulk: Booleen - Indicates if few files should be populate from many (or many from few).\n"
"proxy: Integer - From 0 to 4 (includes) to indicate a level of proxy, 0 to diactivate, 4 made it long.\n"
"proxyWarn: Booleen - Indicates whether an asking is made or not when attempting to populate empty\n"
"           translation with proxied translation.\n"
"fromNID: Booleen - Indicates whether the identifiant name’ string is prefered to be from 'fromFiles' or from\n"
"         'forFiles'.\n"
"overwrite: Char - Should be: 'N' for no, 'A' for ask, or 'F' for force. (verbose is recommand with 'A')\n"
"outdir: String - A path relative from the 'forFiles' paths to indicate where to save the result or None\n"
"        to save inplace.\n"
"verbose: Integer - Indicates the level of verbosity, 0 to deactivate.\n"
"debug: Booleen - Active or not the debuging. The amount in this function can be huge.\n"
msgstr ""

#: rpyTranslations.py:1302
msgid "the 1st argument need to one of the following:"
msgstr ""

#: rpyTranslations.py:1302
msgid ""
"\n"
"  not"
msgstr ""

#: rpyTranslations.py:1304
#, python-brace-format
# wide 110 (tabulations "\t" do not count)
msgid ""
"\t\tpython3 -m rpyTranslations ({cmds}) [args] [options]\n"
"\n"
"\t\tPlease note that the parentesis are just to englob all of the possible command and should not be put.\n"
"\n"
"\t\t-h, --help\n"
"\t\t  Show this general help and exit.\n"
"\t\t  Enter a command followed the help one to see their specific help.\n"
"\t\t  Please note that help commands obviousely doesn’t accept any args or options even if they still\n"
"\t\t   show the requested help.\n"
"\t\targs\n"
"\t\t  Their are specific for each command and generaly should be put in a specific order.\n"
"\t\t  See the specific help of these commands for more information.\n"
"\t\toptions\n"
"\t\t  They generaly can be put everywhere in the argument realm of command.\n"
"\t\t  However, though they can be put in random order, they are treated by order of precedence and each\n"
"\t\t   option can be specified only one times.\n"
"\t\t  The precedence for an option is in right to left order (so, short version of options are always last).\n"
"\t\t  Exemple, for `-% n, --multi n, --lists n`, the precedence is:\n"
"\t\t      `--lists n` > `--multi n` > `-% n`\n"
"\t\t  So if we have this: `-% 2 --multi 5 --lists 3`, only `--list 3` will be treated and retained and the\n"
"\t\t   remaining will stay as is.\n"
"\t\t  Some commands have inter-option precedences. This means that each options will be treated but only\n"
"\t\t   the one with the greater precedence will be retained (see the specific helps for more details).\n"
"\n"
"\t\t  Though commands has their own set of options, here are some general options below:\n"
"\t\t  --\n"
"\t\t      This option allow to indicate where to stop interpreting options.\n"
"\t\t      Exemple, in the following: `-d -- -v`, -d will activates the debug but -v will activates nothing\n"
"\t\t       and stay as -v.\n"
"\t\t  -:\n"
"\t\t      This option should be directly followed (without spaces) by any characters.\n"
"\t\t      These characters should each correspond to short version of options that do not requiered\n"
"\t\t       arguments.\n"
"\t\t      Exemple: `-:vd` correponding to `-v -d`.\n"
"\t\t  -v [lvl], --verbose [lvl]\n"
"\t\t      Activate the verbosity during the process.\n"
"\t\t      lvl can be pass to set the verbosity level, 1 for basic (default) or 2 for more verbosity.\n"
"\t\t  -d, --debug\n"
"\t\t      Activate the debug printings during the process.\n"
"\t\t      Please note that the output can be huge.\n"
"\t\t  See the specific help of commands to see the other options available.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1348 rpyTranslations.py:1442 rpyTranslations.py:1472
#: rpyTranslations.py:1506 rpyTranslations.py:1541 rpyTranslations.py:1578
msgid "help commands do not accept any argument or option."
msgstr ""

#: rpyTranslations.py:1351
# wide 110 (tabulations "\t" do not count)
msgid ""
"\t\trpyTranslations populate [--help] for_files... from_files... [options]\n"
"\n"
"\t\tfor_files and from_files are successions of files and both need to be of equal length.\n"
"\t\tfor_files are the reference files where the translations need to be populate.\n"
"\t\tfrom_files are the reference files from where the translations is get.\n"
"\n"
"\t\toptions:\n"
"\t\t  -h, --help\n"
"\t\t      Show this specific help for the 'populate' command and exit.\n"
"\t\t  -b, --bunch\n"
"\t\t      Indicates if, when a translation is not found, it should be searched for in other files in the\n"
"\t\t       current from-files group.\n"
"\t\t  --bulk [n]\n"
"\t\t      Indicates if few files should be populate from many (or many from few).\n"
"\t\t      If n is puts, it indicate the number of file in the for_files group (default 1).\n"
"\t\t  -o dir, --subdir dir\n"
"\t\t      If put, it indicates a sub-directory to where the populated translation files are saved,\n"
"\t\t       otherwise on the for-files themself.\n"
"\t\t  -% n, --multi n, --lists n\n"
"\t\t      This allow to give the number of list from where merging multiple translations. This include\n"
"\t\t       the first group of files (the for_files).\n"
"\t\t      So, for 2 from_files, you should put it with 3.\n"
"\t\t      It defaults to 2 unless --bulk is use, in that case it defaults to 1 because this latter control the\n"
"\t\t       first list of files.\n"
"\t\t      The internal workflow is like:\n"
"\t\t          for_files - from_files[0] > pop_files ; pop_files - from_files[1] > pop_files ; ...\n"
"\t\t          * Where from_files[#] are group of files of the same length as forFiles.\n"
"\t\t  -a, --ask\n"
"\t\t      If put, a prompt will ask to confirm or no a replacement of translation (only for non-empty).\n"
"\t\t      It’s recommand to use the verbose option with that, so you can know for what file the asking is.\n"
"\t\t  -F, --force, --overwrite\n"
"\t\t      Activate the replacement of existing translations.\n"
"\t\t  --proxy lvl\n"
"\t\t      If a translation is not found with the normals methods, so this option allow to use other methods\n"
"\t\t       based on the proxymity level (lvl).\n"
"\t\t      lvl can be one of the following:\n"
"\t\t          0   Default. No proxy maked.\n"
"\t\t          1   For 'dialogs', allow to focus only in the name part of the dialog identifier.\n"
"\t\t          2   For 'dialogs', allow to fully ignore the dialog identifier and as fallback to search in\n"
"\t\t               'strings' translations, but not allow for 'strings' to search in 'dialogs' translations.\n"
"\t\t          3   Allow to focus only on the strings. With that, 'dialogs' can now be considered as same\n"
"\t\t               as 'strings', so 'strings' can now search in 'dialogs' translations.\n"
"\t\t          4   The strings are compared to get a least a correspondance of 90%.\n"
"\t\t              Please note that this can be a very long process.\n"
"\t\t  -W, --no-proxy-warn\n"
"\t\t      When attempting to populate empty translation with proxied translation, an asking is made.\n"
"\t\t      This option allow to bypass this asking.\n"
"\t\t  --proxy-y lvl\n"
"\t\t      This option is the same as --proxy but with effect of --no-proxy-warn in addition.\n"
"\t\t  -N, --from-nID\n"
"\t\t      By default, the identifiant name’ string are takes from for_files, use this option if rather\n"
"\t\t       prefere it’s to be from from_files.\n"
"\t\t  -v [lvl], --verbose [lvl]\n"
"\t\t      Activate the verbosity during the process.\n"
"\t\t      lvl can be pass to set the verbosity level, 1 for basic (default) or 2 for more verbosity.\n"
"\t\t  -d, --debug\n"
"\t\t      Activate the debug printings during the process. The output can be huge.\n"
"\t\t* Please note that --ask take precedence over --force.\n"
"\t\t* Please note that --proxy take precedence over --proxy-y (though the side effect of this one is kept)\n"
"\t\t   and that --no-proxy-warn had no effect if --proxy-y is use too.\n"
"\n"
"\t\tPlease note that `populate --bulk 2 ./common.rpy ./init.rpy -% 1 ../from/common.rpy ../from/init.rpy`\n"
"\t\t result to the same as `populate --bunch ./common.rpy ./init.rpy ../from/common.rpy ../from/init.rpy`\n"
"\t\t but are less efficiency.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1416
#, python-brace-format
# wide 110 (tabulations "\t" do not count)
msgid ""
"\n"
"\t\tAdditional informations:\n"
"\n"
"\t\t- About the --ask option:\n"
"\t\t    The patern to show askings is the following:\n"
"\t\t      `\n"
"\t\t      For: [for: old dID]\n"
"\t\t      \t<for: old string>\n"
"\t\t      Attempt to replace: [for: new dID]\n"
"\t\t      \t<for: new string>\n"
"\t\t      With: [with: dID]\n"
"\t\t      \t<with: string>\n"
"\t\t      `\n"
"\t\t    The presence of dID parts depends of the translation’ kind (string or dialog translation).\n"
"\t\t    Only dialog translations can contain a dID, and if one doesn’t have one, it will be showed as {0}.\n"
"\t\t    It’s important to note that the dID contains two parts, the first part is a NID (name identifiant)\n"
"\t\t     and the second is image arguments.\n"
"\t\t    As mentioned above, only the NID can be affect by the --from-nID option, this means that first, the\n"
"\t\t     dID is get in the following order of precedence:\n"
"\t\t      [for: new dID] > [for: old dID]\n"
"\t\t     and then, if the --from-nID option is use, the NID can be take from the [with: dID] if:\n"
"\t\t      1) the previously get dID is not {0} and it NID is of string type\n"
"\t\t      2) this [with: dID] is not {0} and it NID is of string type\n"
"\t\t     otherwise, the NID from the previously get dID is keep.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1445
# wide 110 (tabulations "\t" do not count)
msgid ""
"\t\trpyTranslations fix-empty [--help] for_files... [options]\n"
"\n"
"\t\tfor_files are the files where the empty translations need to be fix.\n"
"\n"
"\t\toptions:\n"
"\t\t  -h, --help\n"
"\t\t      Show this specific help for the 'fix-empty' command and exit.\n"
"\t\t  -a act, --action act\n"
"\t\t      This option allow to specify which action take when empty strings are found.\n"
"\t\t      act should be one of the following:\n"
"\t\t          P   Default. All empty 'dialogs' translation are replaced by the 'pass' keyword and the\n"
"\t\t               empty 'strings' translation are removed.\n"
"\t\t          C   All empty 'dialogs' translation are replaced by the 'pass' keyword and the empty\n"
"\t\t               'strings' translation are commented.\n"
"\t\t          R   All empty translation are removed. Please note that this also remove 'dialogs'\n"
"\t\t               translation set with the 'pass' keyword.\n"
"\t\t  -o dir, --subdir dir\n"
"\t\t      If put, it indicates a sub-directory to where the fixed translation files are saved, otherwise\n"
"\t\t       on the for-files themself.\n"
"\t\t  -v [lvl], --verbose [lvl]\n"
"\t\t      Activate the verbosity during the process.\n"
"\t\t      lvl can be pass to set the verbosity level, 1 for basic (default) or 2 for more verbosity.\n"
"\t\t  -d, --debug\n"
"\t\t      Activate the debug printings during the process. The output can be huge.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1475
# wide 110 (tabulations "\t" do not count)
msgid ""
"\t\trpyTranslations check [--help] for_files... [options]\n"
"\n"
"\t\tfor_files are the files where to check the translations.\n"
"\n"
"\t\toptions:\n"
"\t\t  -h, --help\n"
"\t\t      Show this specific help for the 'check' command and exit.\n"
"\t\t  -n, --skip-empty\n"
"\t\t      Deactivate checkings for empty translations.\n"
"\t\t  -e, --empty\n"
"\t\t      Default. Check how many translation is still empty.\n"
"\t\t  -p, --not-translate\n"
"\t\t      Check how many translation is still empty or are set with the 'pass' keyword.\n"
"\t\t  --where\n"
"\t\t      Output or not of where the empty translations are.\n"
"\t\t      Please note that this option had no effect if put with the --skip-empty.\n"
"\t\t  -f, --format\n"
"\t\t      Sometimes leading white-spaces can be typos but generaly they are on purpose (especialy when an\n"
"\t\t       'extend' is in use).\n"
"\t\t      Check if the translations have keep all kinds of formating and that leading white-spaces are\n"
"\t\t       respected.\n"
"\t\t      * Formatings like brackets ([]) and braces ({}).\n"
"\t\t  -v [lvl], --verbose [lvl]\n"
"\t\t      Activate the verbosity during the process.\n"
"\t\t      lvl can be pass to set the verbosity level, 1 for basic (default) or 2 for more verbosity.\n"
"\t\t  -d, --debug\n"
"\t\t      Activate the debug printings during the process. The output can be huge.\n"
"\t\t* Please note that --skip-empty take precedence over --not-translate that take precedence over --empty.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1509
# wide 110 (tabulations "\t" do not count)
msgid ""
"\t\trpyTranslations diff [--help] for_files... [options]\n"
"\n"
"\t\tfor_files and from_files are successions of files and both need to be of equal length.\n"
"\t\tfor_files are the files where differences of translation need to be compared.\n"
"\t\tfrom_files are the reference files from where other translations is get for comparing.\n"
"\n"
"\t\tSince this command is for comparing adds and removing in the for-files, there is no proxy option, and\n"
"\t\t obviousely, empty translation and the 'pass' keyword are treat as different.\n"
"\n"
"\t\toptions:\n"
"\t\t  -h, --help\n"
"\t\t      Show this specific help for the 'diff' command and exit.\n"
"\t\t  --ignore-newpart\n"
"\t\t      Indicates if the comparisons of new-part of translations should be output or not.\n"
"\t\t  --what\n"
"\t\t      Indicates if what is add or is no longer present in the translation files should be output or not.\n"
"\t\t  --reflines\n"
"\t\t      Indicates if the comparisons of reference-lines should be output or not.\n"
"\t\t  --tr-id\n"
"\t\t      Indicates if the comparisons of translation-identifiers should be output or not.\n"
"\t\t  -% n, --multi n, --lists n\n"
"\t\t      This allow to give the number of list from where other translations are get. This include the\n"
"\t\t       first group of files (the for_files).\n"
"\t\t      So, for 2 from_files, you should put it with 3.\n"
"\t\t  -v [lvl], --verbose [lvl]\n"
"\t\t      Activate the verbosity during the process.\n"
"\t\t      lvl can be pass to set the verbosity level, 1 for basic (default) or 2 for more verbosity.\n"
"\t\t  -d, --debug\n"
"\t\t      Activate the debug printings during the process. The output can be huge.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1544
# wide 110 (tabulations "\t" do not count)
msgid ""
"\t\trpyTranslations reorder [--help] for_files... [options]\n"
"\n"
"\t\tfor_files are the reference files where the translations need to be reordered.\n"
"\n"
"\t\tThis command try regrouping similiar translations to ease translations and comprisons of equivalant\n"
"\t\t translations.\n"
"\t\tSince 'strings' translations are generaly unique, it should be note that it’s only work for 'dialogs'.\n"
"\t\tAlso, all occurences are regrouping to the first occurence place.\n"
"\n"
"\t\toptions:\n"
"\t\t  -h, --help\n"
"\t\t      Show this specific help for the 'reorder' command and exit.\n"
"\t\t  -o dir, --subdir dir\n"
"\t\t      If put, it indicates a sub-directory to where the reordered translation files are saved,\n"
"\t\t       otherwise on the for-files themself.\n"
"\t\t  -r, --reverse\n"
"\t\t      If put, try to reordering as it was originaly (as extracted by Ren'Py) through the\n"
"\t\t       reference-line comments (# dir/file.rpy:line).\n"
"\t\t      This functionality ignoring translation that are not have a reference-line comment, those\n"
"\t\t       selected to be reordered are joined and can be inserted between two group of these\n"
"\t\t       ignored translations.\n"
"\t\t  --proxy\n"
"\t\t      If put, this option make translations to be evaluated with a proxy method.\n"
"\t\t      With this method, translations are regrouped function of their normalized alpha-numeric\n"
"\t\t       representation.\n"
"\t\t      Please note that this option had no effect if put with the --reverse option.\n"
"\t\t  -v [lvl], --verbose [lvl]\n"
"\t\t      Activate the verbosity during the process.\n"
"\t\t      lvl can be pass to set the verbosity level, 1 for basic (default) or 2 for more verbosity.\n"
"\t\t  -d, --debug\n"
"\t\t      Activate the debug printings during the process.\n"
"\t\t"
msgstr ""

#: rpyTranslations.py:1598
msgid "Missing argument:"
msgstr ""

#: rpyTranslations.py:1598
msgid "{} option required an argument."
msgstr ""

#: rpyTranslations.py:1602
msgid "{} option should be an integer, give:"
msgstr ""

#: rpyTranslations.py:1635
msgid "{} option should be an absolute integer"
msgstr ""

#: rpyTranslations.py:1638 rpyTranslations.py:1645 rpyTranslations.py:1680
#, python-brace-format
msgid "The file pair lists need to have equal length, {N} gived."
msgid_plural "The file pair lists need to have equal length, {N} gived."
msgstr[0] ""
msgstr[1] ""

#: rpyTranslations.py:1714
msgid "An error occured:\n"
msgstr ""
